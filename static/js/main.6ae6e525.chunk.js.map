{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NEW_MOVIE","NewMovie","state","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","Object","values","every","trim","props","onAdd","this","onSubmit","keys","type","autoComplete","placeholder","onChange","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"+xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kBCtBJK,G,MAAY,CAChBf,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,KAGGE,EAAb,4MACEC,MAAQ,CACNL,MAAOG,GAFX,EAKEG,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAEd,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBL,MAAM,2BACDK,EAAML,OADN,kBAEFS,EAAOC,SAXhB,EAgBEE,aAAe,SAACL,GACdA,EAAMM,iBADkB,IAGhBb,EAAU,EAAKK,MAAfL,MAEJc,OAAOC,OAAOf,GAAOgB,OAAM,SAAAN,GAAK,MAAqB,KAAjBA,EAAMO,WAC5C,EAAKC,MAAMC,MAAMnB,GAGnB,EAAKW,SAAS,CAAEX,MAAOG,KAzB3B,uDA4BY,IAAD,OACCH,EAAUoB,KAAKf,MAAfL,MAER,OACE,0BACER,UAAU,OACV6B,SAAUD,KAAKR,cAGbE,OAAOQ,KAAKnB,GAAWJ,KAAI,SAACE,GAC1B,MAAY,gBAARA,EAEA,8BACEA,IAAKA,EACLsB,KAAK,OACL/B,UAAU,aACVgC,aAAa,MACbC,YAAaxB,EACbQ,KAAMR,EACNS,MAAOV,EAAMC,GACbyB,SAAU,EAAKpB,eAMnB,2BACEL,IAAKA,EACLsB,KAAK,OACL/B,UAAU,aACVgC,aAAa,MACbC,YAAaxB,EACbQ,KAAMR,EACNS,MAAOV,EAAMC,GACbyB,SAAU,EAAKpB,kBAKvB,4BAAQiB,KAAK,SAAS/B,UAAU,gBAAhC,kBAnER,GAA8BmC,a,OCNjBC,EAAb,4MACEvB,MAAQ,CACNP,OAAQ+B,GAFZ,EAKEC,SAAW,SAAC9B,GACV,EAAKW,UAAS,SAACN,GACb,MAAO,CACLP,OAAO,GAAD,mBACDO,EAAMP,QADL,CAEJE,SAVV,uDAgBY,IACAF,EAAWsB,KAAKf,MAAhBP,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAU2B,MAAOC,KAAKU,iBAzBhC,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6ae6e525.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nconst NEW_MOVIE = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport class NewMovie extends Component {\n  state = {\n    movie: NEW_MOVIE,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      movie: {\n        ...state.movie,\n        [name]: value,\n      },\n    }));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { movie } = this.state;\n\n    if (Object.values(movie).every(value => value.trim() !== '')) {\n      this.props.onAdd(movie);\n    }\n\n    this.setState({ movie: NEW_MOVIE });\n  }\n\n  render() {\n    const { movie } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        {\n          Object.keys(NEW_MOVIE).map((key) => {\n            if (key === 'description') {\n              return (\n                <textarea\n                  key={key}\n                  type=\"text\"\n                  className=\"form__item\"\n                  autoComplete=\"off\"\n                  placeholder={key}\n                  name={key}\n                  value={movie[key]}\n                  onChange={this.handleChange}\n                />\n              );\n            }\n\n            return (\n              <input\n                key={key}\n                type=\"text\"\n                className=\"form__item\"\n                autoComplete=\"off\"\n                placeholder={key}\n                name={key}\n                value={movie[key]}\n                onChange={this.handleChange}\n              />\n            );\n          })\n        }\n        <button type=\"submit\" className=\"form__button\">Add movie</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((state) => {\n      return {\n        movies: [\n          ...state.movies,\n          movie,\n        ],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}